{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.36.3",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@microsoft/applicationinsights-core-js!",
  "docComment": "",
  "name": "@microsoft/applicationinsights-core-js",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@microsoft/applicationinsights-core-js!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!__getRegisteredEvents:function(1)",
          "docComment": "/**\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by applications to remove their own events\n *\n * @param target - The EventTarget that has registered events\n *\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\n *\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace, if the eventName also includes a namespace the namespace(s) are merged into a single namespace\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function __getRegisteredEvents(target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", eventName?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", evtNamespace?: "
            },
            {
              "kind": "Content",
              "text": "string | string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "_IRegisteredEvents",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_IRegisteredEvents:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EventHelpers.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "eventName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "evtNamespace",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "__getRegisteredEvents"
        },
        {
          "kind": "Enum",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare const enum _eInternalMessageId "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/LoggingEnums.d.ts",
          "releaseTag": "Public",
          "name": "_eInternalMessageId",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.BrowserCannotReadLocalStorage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BrowserCannotReadLocalStorage = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BrowserCannotReadLocalStorage"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.BrowserCannotReadSessionStorage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BrowserCannotReadSessionStorage = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BrowserCannotReadSessionStorage"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.BrowserCannotWriteLocalStorage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BrowserCannotWriteLocalStorage = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BrowserCannotWriteLocalStorage"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.BrowserCannotWriteSessionStorage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BrowserCannotWriteSessionStorage = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BrowserCannotWriteSessionStorage"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.BrowserDoesNotSupportLocalStorage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BrowserDoesNotSupportLocalStorage = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BrowserDoesNotSupportLocalStorage"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.BrowserFailedRemovalFromLocalStorage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BrowserFailedRemovalFromLocalStorage = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BrowserFailedRemovalFromLocalStorage"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.BrowserFailedRemovalFromSessionStorage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BrowserFailedRemovalFromSessionStorage = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BrowserFailedRemovalFromSessionStorage"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.CannotAccessCookie:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CannotAccessCookie = "
                },
                {
                  "kind": "Content",
                  "text": "68"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CannotAccessCookie"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.CannotParseAiBlobValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CannotParseAiBlobValue = "
                },
                {
                  "kind": "Content",
                  "text": "101"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CannotParseAiBlobValue"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.CannotSendEmptyTelemetry:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CannotSendEmptyTelemetry = "
                },
                {
                  "kind": "Content",
                  "text": "7"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CannotSendEmptyTelemetry"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.CannotSerializeObject:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CannotSerializeObject = "
                },
                {
                  "kind": "Content",
                  "text": "48"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CannotSerializeObject"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.CannotSerializeObjectNonSerializable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CannotSerializeObjectNonSerializable = "
                },
                {
                  "kind": "Content",
                  "text": "49"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CannotSerializeObjectNonSerializable"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.CircularReferenceDetected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CircularReferenceDetected = "
                },
                {
                  "kind": "Content",
                  "text": "50"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CircularReferenceDetected"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.ClearAuthContextFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ClearAuthContextFailed = "
                },
                {
                  "kind": "Content",
                  "text": "51"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ClearAuthContextFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.ClientPerformanceMathError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ClientPerformanceMathError = "
                },
                {
                  "kind": "Content",
                  "text": "8"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ClientPerformanceMathError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.CreateEnvelopeError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreateEnvelopeError = "
                },
                {
                  "kind": "Content",
                  "text": "47"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CreateEnvelopeError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.ErrorParsingAISessionCookie:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ErrorParsingAISessionCookie = "
                },
                {
                  "kind": "Content",
                  "text": "9"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ErrorParsingAISessionCookie"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.ErrorPVCalc:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ErrorPVCalc = "
                },
                {
                  "kind": "Content",
                  "text": "10"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ErrorPVCalc"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.ExceptionTruncated:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ExceptionTruncated = "
                },
                {
                  "kind": "Content",
                  "text": "52"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ExceptionTruncated"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.ExceptionWhileLoggingError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ExceptionWhileLoggingError = "
                },
                {
                  "kind": "Content",
                  "text": "11"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ExceptionWhileLoggingError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedAddingCustomDefinedRequestContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedAddingCustomDefinedRequestContext = "
                },
                {
                  "kind": "Content",
                  "text": "104"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedAddingCustomDefinedRequestContext"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedAddingTelemetryToBuffer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedAddingTelemetryToBuffer = "
                },
                {
                  "kind": "Content",
                  "text": "12"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedAddingTelemetryToBuffer"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedMonitorAjaxAbort:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedMonitorAjaxAbort = "
                },
                {
                  "kind": "Content",
                  "text": "13"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedMonitorAjaxAbort"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedMonitorAjaxDur:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedMonitorAjaxDur = "
                },
                {
                  "kind": "Content",
                  "text": "14"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedMonitorAjaxDur"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedMonitorAjaxGetCorrelationHeader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedMonitorAjaxGetCorrelationHeader = "
                },
                {
                  "kind": "Content",
                  "text": "18"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedMonitorAjaxGetCorrelationHeader"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedMonitorAjaxOpen:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedMonitorAjaxOpen = "
                },
                {
                  "kind": "Content",
                  "text": "15"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedMonitorAjaxOpen"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedMonitorAjaxRSC:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedMonitorAjaxRSC = "
                },
                {
                  "kind": "Content",
                  "text": "16"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedMonitorAjaxRSC"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedMonitorAjaxSend:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedMonitorAjaxSend = "
                },
                {
                  "kind": "Content",
                  "text": "17"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedMonitorAjaxSend"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedMonitorAjaxSetRequestHeader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedMonitorAjaxSetRequestHeader = "
                },
                {
                  "kind": "Content",
                  "text": "71"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedMonitorAjaxSetRequestHeader"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedToAddHandlerForOnBeforeUnload:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedToAddHandlerForOnBeforeUnload = "
                },
                {
                  "kind": "Content",
                  "text": "19"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedToAddHandlerForOnBeforeUnload"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedToFixDepricatedValues:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedToFixDepricatedValues = "
                },
                {
                  "kind": "Content",
                  "text": "44"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedToFixDepricatedValues"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedToReportDataLoss:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedToReportDataLoss = "
                },
                {
                  "kind": "Content",
                  "text": "21"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedToReportDataLoss"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedToRestoreStorageBuffer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedToRestoreStorageBuffer = "
                },
                {
                  "kind": "Content",
                  "text": "42"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedToRestoreStorageBuffer"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedToSendQueuedTelemetry:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedToSendQueuedTelemetry = "
                },
                {
                  "kind": "Content",
                  "text": "20"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedToSendQueuedTelemetry"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FailedToSetStorageBuffer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FailedToSetStorageBuffer = "
                },
                {
                  "kind": "Content",
                  "text": "41"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FailedToSetStorageBuffer"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.FlushFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FlushFailed = "
                },
                {
                  "kind": "Content",
                  "text": "22"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FlushFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.IdTooLong:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IdTooLong = "
                },
                {
                  "kind": "Content",
                  "text": "69"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "IdTooLong"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.IllegalCharsInName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IllegalCharsInName = "
                },
                {
                  "kind": "Content",
                  "text": "53"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "IllegalCharsInName"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.InMemoryStorageBufferFull:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InMemoryStorageBufferFull = "
                },
                {
                  "kind": "Content",
                  "text": "105"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InMemoryStorageBufferFull"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.InstrumentationKeyDeprecation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InstrumentationKeyDeprecation = "
                },
                {
                  "kind": "Content",
                  "text": "106"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InstrumentationKeyDeprecation"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.InvalidBackendResponse:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidBackendResponse = "
                },
                {
                  "kind": "Content",
                  "text": "43"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidBackendResponse"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.InvalidContentBlob:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidContentBlob = "
                },
                {
                  "kind": "Content",
                  "text": "102"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidContentBlob"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.InvalidDurationValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidDurationValue = "
                },
                {
                  "kind": "Content",
                  "text": "45"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidDurationValue"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.InvalidEvent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidEvent = "
                },
                {
                  "kind": "Content",
                  "text": "70"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidEvent"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.InvalidInstrumentationKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidInstrumentationKey = "
                },
                {
                  "kind": "Content",
                  "text": "100"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidInstrumentationKey"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.ItemNotInArray:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ItemNotInArray = "
                },
                {
                  "kind": "Content",
                  "text": "54"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ItemNotInArray"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.MaxAjaxPerPVExceeded:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MaxAjaxPerPVExceeded = "
                },
                {
                  "kind": "Content",
                  "text": "55"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "MaxAjaxPerPVExceeded"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.MessageLimitPerPVExceeded:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MessageLimitPerPVExceeded = "
                },
                {
                  "kind": "Content",
                  "text": "23"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "MessageLimitPerPVExceeded"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.MessageTruncated:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MessageTruncated = "
                },
                {
                  "kind": "Content",
                  "text": "56"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "MessageTruncated"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.MissingRequiredFieldSpecification:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MissingRequiredFieldSpecification = "
                },
                {
                  "kind": "Content",
                  "text": "24"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "MissingRequiredFieldSpecification"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.NameTooLong:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NameTooLong = "
                },
                {
                  "kind": "Content",
                  "text": "57"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NameTooLong"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.NavigationTimingNotSupported:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NavigationTimingNotSupported = "
                },
                {
                  "kind": "Content",
                  "text": "25"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NavigationTimingNotSupported"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.NotificationException:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NotificationException = "
                },
                {
                  "kind": "Content",
                  "text": "74"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NotificationException"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.OnError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OnError = "
                },
                {
                  "kind": "Content",
                  "text": "26"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "OnError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.PluginException:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PluginException = "
                },
                {
                  "kind": "Content",
                  "text": "73"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PluginException"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.SampleRateOutOfRange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SampleRateOutOfRange = "
                },
                {
                  "kind": "Content",
                  "text": "58"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SampleRateOutOfRange"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.SendBrowserInfoOnUserInit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SendBrowserInfoOnUserInit = "
                },
                {
                  "kind": "Content",
                  "text": "72"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SendBrowserInfoOnUserInit"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.SenderNotInitialized:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SenderNotInitialized = "
                },
                {
                  "kind": "Content",
                  "text": "28"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SenderNotInitialized"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.SessionRenewalDateIsZero:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SessionRenewalDateIsZero = "
                },
                {
                  "kind": "Content",
                  "text": "27"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SessionRenewalDateIsZero"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.SessionStorageBufferFull:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SessionStorageBufferFull = "
                },
                {
                  "kind": "Content",
                  "text": "67"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SessionStorageBufferFull"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.SetAuthContextFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SetAuthContextFailed = "
                },
                {
                  "kind": "Content",
                  "text": "59"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SetAuthContextFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.SetAuthContextFailedAccountName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SetAuthContextFailedAccountName = "
                },
                {
                  "kind": "Content",
                  "text": "60"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SetAuthContextFailedAccountName"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.SnippetScriptLoadFailure:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SnippetScriptLoadFailure = "
                },
                {
                  "kind": "Content",
                  "text": "99"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SnippetScriptLoadFailure"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.StartCalledMoreThanOnce:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "StartCalledMoreThanOnce = "
                },
                {
                  "kind": "Content",
                  "text": "62"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "StartCalledMoreThanOnce"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.StartTrackEventFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "StartTrackEventFailed = "
                },
                {
                  "kind": "Content",
                  "text": "29"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "StartTrackEventFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.StartTrackFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "StartTrackFailed = "
                },
                {
                  "kind": "Content",
                  "text": "31"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "StartTrackFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.StopCalledWithoutStart:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "StopCalledWithoutStart = "
                },
                {
                  "kind": "Content",
                  "text": "63"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "StopCalledWithoutStart"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.StopTrackEventFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "StopTrackEventFailed = "
                },
                {
                  "kind": "Content",
                  "text": "30"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "StopTrackEventFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.StopTrackFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "StopTrackFailed = "
                },
                {
                  "kind": "Content",
                  "text": "32"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "StopTrackFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.StringValueTooLong:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "StringValueTooLong = "
                },
                {
                  "kind": "Content",
                  "text": "61"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "StringValueTooLong"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TelemetryEnvelopeInvalid:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TelemetryEnvelopeInvalid = "
                },
                {
                  "kind": "Content",
                  "text": "46"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TelemetryEnvelopeInvalid"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TelemetryInitializerFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TelemetryInitializerFailed = "
                },
                {
                  "kind": "Content",
                  "text": "64"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TelemetryInitializerFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TelemetrySampledAndNotSent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TelemetrySampledAndNotSent = "
                },
                {
                  "kind": "Content",
                  "text": "33"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TelemetrySampledAndNotSent"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TrackArgumentsNotSpecified:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TrackArgumentsNotSpecified = "
                },
                {
                  "kind": "Content",
                  "text": "65"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TrackArgumentsNotSpecified"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TrackEventFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TrackEventFailed = "
                },
                {
                  "kind": "Content",
                  "text": "34"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TrackEventFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TrackExceptionFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TrackExceptionFailed = "
                },
                {
                  "kind": "Content",
                  "text": "35"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TrackExceptionFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TrackMetricFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TrackMetricFailed = "
                },
                {
                  "kind": "Content",
                  "text": "36"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TrackMetricFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TrackPageActionEventFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TrackPageActionEventFailed = "
                },
                {
                  "kind": "Content",
                  "text": "103"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TrackPageActionEventFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TrackPVFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TrackPVFailed = "
                },
                {
                  "kind": "Content",
                  "text": "37"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TrackPVFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TrackPVFailedCalc:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TrackPVFailedCalc = "
                },
                {
                  "kind": "Content",
                  "text": "38"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TrackPVFailedCalc"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TrackTraceFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TrackTraceFailed = "
                },
                {
                  "kind": "Content",
                  "text": "39"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TrackTraceFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.TransmissionFailed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TransmissionFailed = "
                },
                {
                  "kind": "Content",
                  "text": "40"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TransmissionFailed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId.UrlTooLong:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UrlTooLong = "
                },
                {
                  "kind": "Content",
                  "text": "66"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UrlTooLong"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class _InternalLogMessage "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/DiagnosticLogger.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "_InternalLogMessage",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `_InternalLogMessage` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(msgId: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalMessageId",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:type"
                },
                {
                  "kind": "Content",
                  "text": ", msg: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", isUserAct?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "msgId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "msg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isUserAct",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage.dataType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static dataType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage#messageId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "messageId: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalMessageId",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "messageId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type _InternalMessageId = "
            },
            {
              "kind": "Content",
              "text": "number | "
            },
            {
              "kind": "Reference",
              "text": "_eInternalMessageId",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId:enum"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/LoggingEnums.d.ts",
          "releaseTag": "Public",
          "name": "_InternalMessageId",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:var",
          "docComment": "/**\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_InternalMessageId: "
            },
            {
              "kind": "Content",
              "text": "import(\"../JavaScriptSDK.Enums/EnumHelperFuncs\")."
            },
            {
              "kind": "Reference",
              "text": "EnumValue",
              "canonicalReference": "@microsoft/applicationinsights-core-js!EnumValue:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "_eInternalMessageId",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_eInternalMessageId:enum"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/LoggingEnums.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "_InternalMessageId",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_IRegisteredEvents:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface _IRegisteredEvents "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EventHelpers.d.ts",
          "releaseTag": "Public",
          "name": "_IRegisteredEvents",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_IRegisteredEvents#handler:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handler: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "handler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_IRegisteredEvents#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_legacyCookieMgr:function(1)",
          "docComment": "/**\n * Helper to support backward compatibility for users that use the legacy cookie handling functions and the use the internal CoreUtils._canUseCookies global flag to enable/disable cookies usage. Note: This has the following deliberate side-effects - Creates the global (legacy) cookie manager if it does not already exist - Attempts to add \"listeners\" to the CoreUtils._canUseCookies property to support the legacy usage\n *\n * @param config - \n *\n * @param logger - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function _legacyCookieMgr(config?: "
            },
            {
              "kind": "Reference",
              "text": "IConfiguration",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ", logger?: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICookieMgr",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/CoreUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            },
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "_legacyCookieMgr"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_logInternalMessage:function(1)",
          "docComment": "/**\n * Logs a message to the internal queue.\n *\n * @param logger - The Diagnostic Logger instance to use.\n *\n * @param severity - The severity of the log message\n *\n * @param message - The message to log.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function _logInternalMessage(logger: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": ", severity: "
            },
            {
              "kind": "Reference",
              "text": "LoggingSeverity",
              "canonicalReference": "@microsoft/applicationinsights-core-js!LoggingSeverity:type"
            },
            {
              "kind": "Content",
              "text": ", message: "
            },
            {
              "kind": "Reference",
              "text": "_InternalLogMessage",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/DiagnosticLogger.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "severity",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "_logInternalMessage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_throwInternal:function(1)",
          "docComment": "/**\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in debug mode or attempt to log the error as a console warning. This helper is provided mostly to better support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout the code.\n *\n * @param logger - The Diagnostic Logger instance to use.\n *\n * @param severity - The severity of the log message\n *\n * @param message - The log message.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function _throwInternal(logger: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": ", severity: "
            },
            {
              "kind": "Reference",
              "text": "LoggingSeverity",
              "canonicalReference": "@microsoft/applicationinsights-core-js!LoggingSeverity:type"
            },
            {
              "kind": "Content",
              "text": ", msgId: "
            },
            {
              "kind": "Reference",
              "text": "_InternalMessageId",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:type"
            },
            {
              "kind": "Content",
              "text": ", msg: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties?: "
            },
            {
              "kind": "Reference",
              "text": "Object",
              "canonicalReference": "!Object:interface"
            },
            {
              "kind": "Content",
              "text": ", isUserAct?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/DiagnosticLogger.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "severity",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "msgId",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "msg",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": true
            },
            {
              "parameterName": "isUserAct",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "isOptional": true
            }
          ],
          "name": "_throwInternal"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_warnToConsole:function(1)",
          "docComment": "/**\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\n *\n * @param logger - The Diagnostic Logger instance to use.\n *\n * @param message - The log message.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function _warnToConsole(logger: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": ", message: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/DiagnosticLogger.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "_warnToConsole"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!addEventHandler:function(1)",
          "docComment": "/**\n * Trys to add an event handler for the specified event to the window, body and document\n *\n * @param eventName - The name of the event\n *\n * @param callback - The callback function that needs to be executed for the given event\n *\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.  @return {boolean} - true if the handler was successfully added\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addEventHandler(eventName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", callback: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", evtNamespace?: "
            },
            {
              "kind": "Content",
              "text": "string | string[] | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EventHelpers.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "eventName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "callback",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "evtNamespace",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "addEventHandler"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!addEventListeners:function(1)",
          "docComment": "/**\n * Bind the listener to the array of events\n *\n * @param events - An string array of event names to bind the listener to\n *\n * @param listener - The event callback to call when the event is triggered\n *\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\n *\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\n *\n * @returns true - when at least one of the events was registered otherwise false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addEventListeners(events: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", listener: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", excludeEvents?: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", evtNamespace?: "
            },
            {
              "kind": "Content",
              "text": "string | string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EventHelpers.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "events",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "listener",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "excludeEvents",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "evtNamespace",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "addEventListeners"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!addPageHideEventListener:function(1)",
          "docComment": "/**\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\n *\n * @param listener - The event callback to call when a page hide event is triggered\n *\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\n *\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events so that only the matching \"removePageHideEventListener\" can remove these events. Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\n *\n * @returns true - when at least one of the events was registered otherwise false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addPageHideEventListener(listener: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", excludeEvents?: "
            },
            {
              "kind": "Content",
              "text": "string[] | null"
            },
            {
              "kind": "Content",
              "text": ", evtNamespace?: "
            },
            {
              "kind": "Content",
              "text": "string | string[] | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EventHelpers.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "listener",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "excludeEvents",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "evtNamespace",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "addPageHideEventListener"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!addPageShowEventListener:function(1)",
          "docComment": "/**\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\n *\n * @param listener - The event callback to call when a page is show event is triggered\n *\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\n *\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events so that only the matching \"removePageShowEventListener\" can remove these events.\n *\n * @returns true - when at least one of the events was registered otherwise false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addPageShowEventListener(listener: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", excludeEvents?: "
            },
            {
              "kind": "Content",
              "text": "string[] | null"
            },
            {
              "kind": "Content",
              "text": ", evtNamespace?: "
            },
            {
              "kind": "Content",
              "text": "string | string[] | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EventHelpers.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "listener",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "excludeEvents",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "evtNamespace",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "addPageShowEventListener"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!addPageUnloadEventListener:function(1)",
          "docComment": "/**\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring, this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is just navigating to a different Tab and may come back (without unloading the page). As such you may also need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\n *\n * @param listener - The event callback to call when a page unload event is triggered\n *\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\n *\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\n *\n * @returns true - when at least one of the events was registered otherwise false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addPageUnloadEventListener(listener: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", excludeEvents?: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", evtNamespace?: "
            },
            {
              "kind": "Content",
              "text": "string | string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EventHelpers.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "listener",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "excludeEvents",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "evtNamespace",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "addPageUnloadEventListener"
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!AppInsightsCore:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AppInsightsCore extends "
            },
            {
              "kind": "Reference",
              "text": "BaseCore",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "IAppInsightsCore",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/AppInsightsCore.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "AppInsightsCore",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!AppInsightsCore:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `AppInsightsCore` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!AppInsightsCore#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize(config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ", extensions: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", logger?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", notificationManager?: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extensions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "notificationManager",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initialize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!AppInsightsCore#track:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "track(telemetryItem: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "telemetryItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "track"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!areCookiesSupported:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function areCookiesSupported(logger?: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/CookieMgr.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "areCookiesSupported"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!arrForEach:function(1)",
          "docComment": "/**\n * Performs the specified action for each element in an array. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array. It can return -1 to break out of the loop\n *\n * @param thisArg - [Optional] An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrForEach<T = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ">(arr: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", callbackfn: "
            },
            {
              "kind": "Content",
              "text": "(value: T, index?: number, array?: T[]) => undefined | void | number"
            },
            {
              "kind": "Content",
              "text": ", thisArg?: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/HelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "callbackfn",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "thisArg",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "arrForEach"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!arrIndexOf:function(1)",
          "docComment": "/**\n * Returns the index of the first occurrence of a value in an array. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param searchElement - The value to locate in the array.\n *\n * @param fromIndex - The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrIndexOf<T>(arr: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", searchElement: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", fromIndex?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/HelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "searchElement",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "fromIndex",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arrIndexOf"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!arrMap:function(1)",
          "docComment": "/**\n * Calls a defined callback function on each element of an array, and returns an array that contains the results. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n *\n * @param thisArg - An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrMap<T, R>(arr: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", callbackfn: "
            },
            {
              "kind": "Content",
              "text": "(value: T, index?: number, array?: T[]) => R"
            },
            {
              "kind": "Content",
              "text": ", thisArg?: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "R[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/HelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "callbackfn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "thisArg",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arrMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!arrReduce:function(1)",
          "docComment": "/**\n * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n *\n * @param initialValue - If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrReduce<T, R>(arr: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", callbackfn: "
            },
            {
              "kind": "Content",
              "text": "(previousValue: T | R, currentValue?: T, currentIndex?: number, array?: T[]) => R"
            },
            {
              "kind": "Content",
              "text": ", initialValue?: "
            },
            {
              "kind": "Content",
              "text": "R"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "R"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/HelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "callbackfn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "initialValue",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arrReduce"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!attachEvent:function(1)",
          "docComment": "/**\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\n *\n * @param obj - Object to add the event too.\n *\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\n *\n * @param handlerRef - Pointer that specifies the function to call when event fires\n *\n * @param useCapture - [Optional] Defaults to false\n *\n * @returns True if the function was bound successfully to the event, otherwise false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function attachEvent(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", eventNameWithoutOn: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", handlerRef: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", useCapture?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EventHelpers.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "eventNameWithoutOn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "handlerRef",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "useCapture",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "attachEvent"
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BaseCore implements "
            },
            {
              "kind": "Reference",
              "text": "IAppInsightsCore",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/BaseCore.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BaseCore",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#_extensions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_extensions: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_extensions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#_updateHook:member(1)",
              "docComment": "/**\n * Hook for Core extensions to allow them to update their own configuration before updating all of the plugins.\n *\n * @param updateCtx - The plugin update context\n *\n * @param updateState - The Update State\n *\n * @returns boolean - True means the extension class will call updateState otherwise the Core will\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _updateHook?(updateCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryUpdateContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryUpdateContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ", updateState: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryUpdateState",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryUpdateState:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void | boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "updateCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "updateState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": true,
              "isAbstract": false,
              "name": "_updateHook"
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BaseCore` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#addNotificationListener:member(1)",
              "docComment": "/**\n * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised. The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be called.\n *\n * @param listener - An INotificationListener object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addNotificationListener(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addNotificationListener"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#addPlugin:member(1)",
              "docComment": "/**\n * Add a new plugin to the installation\n *\n * @param plugin - The new plugin to add\n *\n * @param replaceExisting - should any existing plugin be replaced, default is false\n *\n * @param doAsync - Should the add be performed asynchronously\n *\n * @param addCb - [Optional] callback to call after the plugin has been added\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addPlugin<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(plugin: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", replaceExisting?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", doAsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", addCb?: "
                },
                {
                  "kind": "Content",
                  "text": "(added?: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "plugin",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "replaceExisting",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "doAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "addCb",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addPlugin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#addTelemetryInitializer:member(1)",
              "docComment": "/**\n * Add a telemetry processor to decorate or drop telemetry events.\n *\n * @param telemetryInitializer - The Telemetry Initializer function\n *\n * @returns - A ITelemetryInitializerHandler to enable the initializer to be removed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addTelemetryInitializer(telemetryInitializer: "
                },
                {
                  "kind": "Reference",
                  "text": "TelemetryInitializerFunction",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!TelemetryInitializerFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryInitializerHandler",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryInitializerHandler:interface"
                },
                {
                  "kind": "Content",
                  "text": " | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "telemetryInitializer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addTelemetryInitializer"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#addUnloadCb:member(1)",
              "docComment": "/**\n * Add an unload handler that will be called when the SDK is being unloaded\n *\n * @param handler - the handler\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUnloadCb(handler: "
                },
                {
                  "kind": "Reference",
                  "text": "UnloadHandler",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!UnloadHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addUnloadCb"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore.defaultConfig:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static defaultConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#eventCnt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventCnt(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "eventCnt"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#evtNamespace:member(1)",
              "docComment": "/**\n * Returns the unique event namespace that should be used\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "evtNamespace(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "evtNamespace"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#flush:member(1)",
              "docComment": "/**\n * Flush and send any batched / cached data immediately\n *\n * @param async - send data asynchronously when true (defaults to true)\n *\n * @param callBack - if specified, notify caller when send is complete, the channel should return true to indicate to the caller that it will be called. If the caller doesn't return true the caller should assume that it may never be called.\n *\n * @param sendReason - specify the reason that you are calling \"flush\" defaults to ManualFlush (1) if not specified\n *\n * @returns - true if the callback will be return after the flush is complete otherwise the caller should assume that any provided callback will never be called\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flush(isAsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", callBack?: "
                },
                {
                  "kind": "Content",
                  "text": "(flushComplete?: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ", sendReason?: "
                },
                {
                  "kind": "Reference",
                  "text": "SendRequestReason",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "callBack",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "sendReason",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "flush"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getCookieMgr:member(1)",
              "docComment": "/**\n * Get the current cookie manager for this instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCookieMgr(): "
                },
                {
                  "kind": "Reference",
                  "text": "ICookieMgr",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCookieMgr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getNotifyMgr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNotifyMgr(): "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNotifyMgr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getPerfMgr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPerfMgr(): "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPerfMgr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getPlugin:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPlugin<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(pluginIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ILoadedPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ILoadedPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pluginIdentifier",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPlugin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getProcessTelContext:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getProcessTelContext(): "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getProcessTelContext"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getTraceCtx:member(1)",
              "docComment": "/**\n * Gets the current distributed trace context for this instance if available\n *\n * @param createNew - Optional flag to create a new instance if one doesn't currently exist, defaults to true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTraceCtx(createNew?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDistributedTraceContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDistributedTraceContext:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "createNew",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTraceCtx"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getTransmissionControls:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTransmissionControls(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelControls",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls:interface"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTransmissionControls"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize(config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ", extensions: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", logger?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", notificationManager?: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extensions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "notificationManager",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initialize"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#isInitialized:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInitialized: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isInitialized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logger: "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#pollInternalLogs:member(1)",
              "docComment": "/**\n * Enable the timer that checks the logger.queue for log messages to be flushed. Note: Since 3.0.1 and 2.8.13 this is no longer an interval timer but is a normal timer that is only started when this function is called and then subsequently only _if_ there are any logger.queue messages to be sent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pollInternalLogs(eventName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "pollInternalLogs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#releaseQueue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected releaseQueue(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "releaseQueue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#removeNotificationListener:member(1)",
              "docComment": "/**\n * Removes all instances of the listener.\n *\n * @param listener - INotificationListener to remove.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeNotificationListener(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "removeNotificationListener"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#setCookieMgr:member(1)",
              "docComment": "/**\n * Set the current cookie manager for this instance\n *\n * @param cookieMgr - The manager, if set to null/undefined will cause the default to be created\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCookieMgr(cookieMgr: "
                },
                {
                  "kind": "Reference",
                  "text": "ICookieMgr",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "cookieMgr",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCookieMgr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#setPerfMgr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setPerfMgr(perfMgr: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "perfMgr",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setPerfMgr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#setTraceCtx:member(1)",
              "docComment": "/**\n * Sets the current distributed trace context for this instance if available\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTraceCtx(newTracectx: "
                },
                {
                  "kind": "Reference",
                  "text": "IDistributedTraceContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDistributedTraceContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "newTracectx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setTraceCtx"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#stopPollingInternalLogs:member(1)",
              "docComment": "/**\n * Stop the timer that log messages from logger.queue when available\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stopPollingInternalLogs(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "stopPollingInternalLogs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#track:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "track(telemetryItem: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "telemetryItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "track"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#unload:member(1)",
              "docComment": "/**\n * Unload and Tear down the SDK and any initialized plugins, after calling this the SDK will be considered to be un-initialized and non-operational, re-initializing the SDK should only be attempted if the previous unload call return `true` stating that all plugins reported that they also unloaded, the recommended approach is to create a new instance and initialize that instance. This is due to possible unexpected side effects caused by plugins not supporting unload / teardown, unable to successfully remove any global references or they may just be completing the unload process asynchronously.\n *\n * @param isAsync - Can the unload be performed asynchronously (default)\n *\n * @param unloadComplete - An optional callback that will be called once the unload has completed\n *\n * @param cbTimeout - An optional timeout to wait for any flush operations to complete before proceeding with the unload. Defaults to 5 seconds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unload(isAsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", unloadComplete?: "
                },
                {
                  "kind": "Content",
                  "text": "(unloadState: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryUnloadState",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryUnloadState:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ", cbTimeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "unloadComplete",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "cbTimeout",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "unload"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin:class",
          "docComment": "/**\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins can avoid implementation the same set of boiler plate code as well as provide a base implementation so that new default implementations can be added without breaking all plugins.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class BaseTelemetryPlugin implements "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryPlugin",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/BaseTelemetryPlugin.d.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "BaseTelemetryPlugin",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#_addHook:member(1)",
              "docComment": "/**\n * Add this hook so that it is automatically removed during unloading\n *\n * @param hooks - The single hook or an array of IInstrumentHook objects\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _addHook(hooks: "
                },
                {
                  "kind": "Reference",
                  "text": "IInstrumentHook",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHook:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "IInstrumentHook",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHook:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "hooks",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "_addHook"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#_addUnloadCb:member(1)",
              "docComment": "/**\n * Add an unload handler that will be called when the SDK is being unloaded\n *\n * @param handler - the handler\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _addUnloadCb(handler: "
                },
                {
                  "kind": "Reference",
                  "text": "UnloadHandler",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!UnloadHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "_addUnloadCb"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#_doTeardown:member",
              "docComment": "/**\n * Teardown / Unload hook to allow implementations to perform some additional unload operations before the BaseTelemetryPlugin finishes it's removal.\n *\n * @param unloadCtx - This is the context that should be used during unloading.\n *\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\n *\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\n *\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _doTeardown?: "
                },
                {
                  "kind": "Content",
                  "text": "(unloadCtx?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryUnloadContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryUnloadContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ", unloadState?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryUnloadState",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryUnloadState:interface"
                },
                {
                  "kind": "Content",
                  "text": ", asyncCallback?: () => void) => void | boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_doTeardown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#_doUpdate:member",
              "docComment": "/**\n * Extension hook to allow implementations to perform some additional update operations before the BaseTelemetryPlugin finishes it's removal\n *\n * @param updateCtx - This is the context that should be used during updating.\n *\n * @param updateState - The details / state of the update process, it holds details like the current and previous configuration.\n *\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async update operations.\n *\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _doUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "(updateCtx?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryUpdateContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryUpdateContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ", updateState?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryUpdateState",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryUpdateState:interface"
                },
                {
                  "kind": "Content",
                  "text": ", asyncCallback?: () => void) => void | boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_doUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#_getTelCtx:member",
              "docComment": "/**\n * Helper to return the current IProcessTelemetryContext, if the passed argument exists this just returns that value (helps with minification for callers), otherwise it will return the configured context or a temporary one.\n *\n * @param currentCtx - [Optional] The current execution context\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _getTelCtx: "
                },
                {
                  "kind": "Content",
                  "text": "(currentCtx?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_getTelCtx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BaseTelemetryPlugin` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#core:member",
              "docComment": "/**\n * Holds the core instance that was used during initialization\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "core: "
                },
                {
                  "kind": "Reference",
                  "text": "IAppInsightsCore",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "core",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#diagLog:member",
              "docComment": "/**\n * Returns the current diagnostic logger that can be used to log issues, if no logger is currently assigned a new default one will be created and returned.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "diagLog: "
                },
                {
                  "kind": "Content",
                  "text": "(itemCtx?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "diagLog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#identifier:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize(config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ", core: "
                },
                {
                  "kind": "Reference",
                  "text": "IAppInsightsCore",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
                },
                {
                  "kind": "Content",
                  "text": ", extensions: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", pluginChain?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "core",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extensions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "pluginChain",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initialize"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#isInitialized:member",
              "docComment": "/**\n * Returns whether the plugin has been initialized\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInitialized: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isInitialized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#priority:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "priority: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "priority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#processNext:member",
              "docComment": "/**\n * Call back for telemetry processing before it it is sent\n *\n * @param env - This is the current event being reported\n *\n * @param itemCtx - This is the context for the current request, ITelemetryPlugin instances can optionally use this to access the current core instance or define / pass additional information to later plugins (vs appending items to the telemetry item)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processNext: "
                },
                {
                  "kind": "Content",
                  "text": "(env: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": ", itemCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "processNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#processTelemetry:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract processTelemetry(env: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": ", itemCtx?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "env",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "itemCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "processTelemetry"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#setInitialized:member",
              "docComment": "/**\n * Internal helper to allow setting of the internal initialized setting for inherited instances and unit testing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected setInitialized: "
                },
                {
                  "kind": "Content",
                  "text": "(isInitialized: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setInitialized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#setNextPlugin:member",
              "docComment": "/**\n * Set next extension for telemetry processing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setNextPlugin: "
                },
                {
                  "kind": "Content",
                  "text": "(next: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setNextPlugin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#teardown:member(1)",
              "docComment": "/**\n * Tear down the plugin and remove any hooked value, the plugin should be removed so that it is no longer initialized and therefore could be re-initialized after being torn down. The plugin should ensure that once this has been called any further processTelemetry calls are ignored and it just calls the processNext() with the provided context.\n *\n * @param unloadCtx - This is the context that should be used during unloading.\n *\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\n *\n * @returns boolean - true if the plugin has or will call processNext(), this for backward compatibility as previously teardown was synchronous and returned nothing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "teardown(unloadCtx?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryUnloadContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryUnloadContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ", unloadState?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryUnloadState",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryUnloadState:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void | boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "unloadCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "unloadState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "teardown"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#update:member(1)",
              "docComment": "/**\n * The the plugin should re-evaluate configuration and update any cached configuration settings.\n *\n * @param updateCtx - This is the context that should be used during updating.\n *\n * @param updateState - The details / state of the update process, it holds details like the current and previous configuration.\n *\n * @returns boolean - true if the plugin has or will call updateCtx.processNext(), this allows the plugin to perform any asynchronous operations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update(updateCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryUpdateContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryUpdateContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ", updateState: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryUpdateState",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryUpdateState:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void | boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "updateCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "updateState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "update"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!canUseCookies:function(1)",
          "docComment": "/**\n * @deprecated\n *\n * - Use the core.getCookieMgr().isEnabled() Helper method to tell if document.cookie object is available and whether it can be used.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function canUseCookies(logger: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/CoreUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "canUseCookies"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!CoreUtils:var",
          "docComment": "/**\n * Provides a collection of utility functions, included for backward compatibility with previous releases.\n *\n * @deprecated\n *\n * Marking this instance as deprecated in favor of direct usage of the helper functions as direct usage provides better tree-shaking and minification by avoiding the inclusion of the unused items in your resulting code.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "CoreUtils: "
            },
            {
              "kind": "Reference",
              "text": "ICoreUtils",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils:interface"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/CoreUtils.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "CoreUtils",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createClassFromInterface:function(1)",
          "docComment": "/**\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults. Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\n *\n * @param defaults - Simple helper\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createClassFromInterface<T>(defaults?: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "new () => T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/HelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "defaults",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createClassFromInterface"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createCookieMgr:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createCookieMgr(rootConfig?: "
            },
            {
              "kind": "Reference",
              "text": "IConfiguration",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ", logger?: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICookieMgr",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/CookieMgr.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootConfig",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            },
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "createCookieMgr"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createCustomDomEvent:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createCustomDomEvent(eventName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", details?: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "CustomEvent",
              "canonicalReference": "!CustomEvent:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "eventName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "details",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "createCustomDomEvent"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createEnumMap:function(1)",
          "docComment": "/**\n * Create a 2 index map that maps an enum's key as both the key and value, X[\"key\"] => \"key\" and X[0] => \"keyof 0\".\n *\n * @param values - The values to populate on the new object\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createEnumMap<E, I = "
            },
            {
              "kind": "Content",
              "text": "keyof E"
            },
            {
              "kind": "Content",
              "text": ">(values: "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in keyof E]: E[keyof E];\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "EnumMap",
              "canonicalReference": "@microsoft/applicationinsights-core-js!EnumMap:type"
            },
            {
              "kind": "Content",
              "text": "<E, I>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/EnumHelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "values",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "I",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "createEnumMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createEnumStyle:function(1)",
          "docComment": "/**\n * Create an enum style object which has both the key => value and value => key mappings\n *\n * @param values - The values to populate on the new object\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createEnumStyle<E>(values: "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in keyof E]: E[keyof E];\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "EnumValue",
              "canonicalReference": "@microsoft/applicationinsights-core-js!EnumValue:type"
            },
            {
              "kind": "Content",
              "text": "<E>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/EnumHelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "values",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createEnumStyle"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createProcessTelemetryContext:function(1)",
          "docComment": "/**\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\n *\n * @param plugins - The plugin instances that will be executed\n *\n * @param config - The current config\n *\n * @param core - The current core instance\n *\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createProcessTelemetryContext(telemetryChain: "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryPluginChain",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ", config: "
            },
            {
              "kind": "Reference",
              "text": "IConfiguration",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ", core: "
            },
            {
              "kind": "Reference",
              "text": "IAppInsightsCore",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
            },
            {
              "kind": "Content",
              "text": ", startAt?: "
            },
            {
              "kind": "Reference",
              "text": "IPlugin",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IProcessTelemetryContext",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/ProcessTelemetryContext.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "telemetryChain",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "core",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "startAt",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            }
          ],
          "name": "createProcessTelemetryContext"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createTraceParent:function(1)",
          "docComment": "/**\n * Create a new ITraceParent instance using the provided values.\n *\n * @param traceId - The traceId to use, when invalid a new random W3C id will be generated.\n *\n * @param spanId - The parent/span id to use, a new random value will be generated if it is invalid.\n *\n * @param flags - The traceFlags to use, defaults to zero (0) if not supplied or invalid\n *\n * @param version - The version to used, defaults to version \"01\" if not supplied or invalid.\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createTraceParent(traceId?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", spanId?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", flags?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", version?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ITraceParent",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITraceParent:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/W3cTraceParent.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "traceId",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            },
            {
              "parameterName": "spanId",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "flags",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "version",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "createTraceParent"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createUniqueNamespace:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createUniqueNamespace(name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", includeVersion?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/DataCacheHelper.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "includeVersion",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "createUniqueNamespace"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createUnloadHandlerContainer:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createUnloadHandlerContainer(): "
            },
            {
              "kind": "Content",
              "text": "{\n    add: (handler: "
            },
            {
              "kind": "Reference",
              "text": "UnloadHandler",
              "canonicalReference": "@microsoft/applicationinsights-core-js!UnloadHandler:type"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    run: (unloadCtx: "
            },
            {
              "kind": "Reference",
              "text": "IProcessTelemetryUnloadContext",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryUnloadContext:interface"
            },
            {
              "kind": "Content",
              "text": ", unloadState: "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryUnloadState",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryUnloadState:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/UnloadHandlerContainer.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "createUnloadHandlerContainer"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createValueMap:function(1)",
          "docComment": "/**\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] => mapValue and X[0] => mapValue. Generic values - E = the const enum type (typeof eRequestHeaders); - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The resulting \"Value\" of each entry identifies the valid values withing the assignments.\n *\n * @param values - The values to populate on the new object\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createValueMap<E, V = "
            },
            {
              "kind": "Content",
              "text": "E"
            },
            {
              "kind": "Content",
              "text": ">(values: "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in keyof E]: [E[keyof E], V[keyof V]];\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "V"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/EnumHelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "values",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "createValueMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!dateNow:function(1)",
          "docComment": "/**\n * Return the current time via the Date now() function (if available) and falls back to (new Date()).getTime() if now() is unavailable (IE8 or less) https://caniuse.com/#search=Date.now\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dateNow(): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/HelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "dateNow"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!deepFreeze:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function deepFreeze<T>(obj: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/HelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "deepFreeze"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!deleteCookie:function(1)",
          "docComment": "/**\n * @deprecated\n *\n * - Use the core.getCookieMgr().del() Deletes a cookie by setting it's expiration time in the past.\n *\n * @param name - The name of the cookie to delete.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function deleteCookie(logger: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": ", name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/CoreUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "deleteCookie"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!detachEvent:function(1)",
          "docComment": "/**\n * Removes an event handler for the specified event\n *\n * @param Object - to remove the event from\n *\n * @param eventNameWithoutOn - The name of the event, with optional namespaces or just the namespaces, such as \"click\", \"click.mynamespace\" or \".mynamespace\"\n *\n * @param handlerRef - The callback function that needs to be removed from the given event, when using a namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers otherwise this will only remove events with this specific handler.\n *\n * @param useCapture - [Optional] Defaults to false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function detachEvent(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", eventNameWithoutOn: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", handlerRef: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", useCapture?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EventHelpers.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "eventNameWithoutOn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "handlerRef",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "useCapture",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "detachEvent"
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DiagnosticLogger implements "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/DiagnosticLogger.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DiagnosticLogger",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DiagnosticLogger` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config?: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#consoleLoggingLevel:member(1)",
              "docComment": "/**\n * 0: OFF (default) 1: CRITICAL 2: >= WARNING\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "consoleLoggingLevel(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "consoleLoggingLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#enableDebugExceptions:member(1)",
              "docComment": "/**\n * When this is true the SDK will throw exceptions to aid in debugging.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableDebugExceptions(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "enableDebugExceptions"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#errorToConsole:member(1)",
              "docComment": "/**\n * This will write an error to the console if possible\n *\n * @param message - The warning message\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorToConsole(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "errorToConsole"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#identifier:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#logInternalMessage:member(1)",
              "docComment": "/**\n * Logs a message to the internal queue.\n *\n * @param severity - The severity of the log message\n *\n * @param message - The message to log.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logInternalMessage(severity: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggingSeverity",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!LoggingSeverity:type"
                },
                {
                  "kind": "Content",
                  "text": ", message: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalLogMessage",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "severity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "logInternalMessage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#maxInternalMessageLimit:member(1)",
              "docComment": "/**\n * The maximum number of internal messages allowed to be sent per page view\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxInternalMessageLimit(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "maxInternalMessageLimit"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#queue:member",
              "docComment": "/**\n * The internal logging queue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "queue: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalLogMessage",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#resetInternalMessageCount:member(1)",
              "docComment": "/**\n * Resets the internal message count\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resetInternalMessageCount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "resetInternalMessageCount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#telemetryLoggingLevel:member(1)",
              "docComment": "/**\n * 0: OFF 1: CRITICAL (default) 2: >= WARNING\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "telemetryLoggingLevel(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "telemetryLoggingLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#throwInternal:member(1)",
              "docComment": "/**\n * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\n *\n * @param severity - The severity of the log message\n *\n * @param message - The log message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "throwInternal(severity: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggingSeverity",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!LoggingSeverity:type"
                },
                {
                  "kind": "Content",
                  "text": ", msgId: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalMessageId",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:type"
                },
                {
                  "kind": "Content",
                  "text": ", msg: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", isUserAct?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "severity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "msgId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "msg",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "isUserAct",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "throwInternal"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#warnToConsole:member(1)",
              "docComment": "/**\n * This will write a warning to the console if possible\n *\n * @param message - The warning message\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "warnToConsole(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "warnToConsole"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!disableCookies:function(1)",
          "docComment": "/**\n * @deprecated\n *\n * - Use the core.getCookieMgr().disable() Force the SDK not to store and read any data from cookies.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function disableCookies(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/CoreUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "disableCookies"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!dispatchEvent_2:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dispatchEvent(target: "
            },
            {
              "kind": "Reference",
              "text": "EventTarget",
              "canonicalReference": "!EventTarget:interface"
            },
            {
              "kind": "Content",
              "text": ", evnt: "
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "!Event:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CustomEvent",
              "canonicalReference": "!CustomEvent:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "evnt",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "dispatchEvent_2"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!doPerf:function(1)",
          "docComment": "/**\n * Helper function to wrap a function with a perf event\n *\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\n *\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\n *\n * @param func - The function to call and measure\n *\n * @param details - A function to return the payload details\n *\n * @param isAsync - Is the event / function being call asynchronously or synchronously\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function doPerf<T>(mgrSource: "
            },
            {
              "kind": "Reference",
              "text": "IPerfManagerProvider",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManagerProvider:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "IPerfManager",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface"
            },
            {
              "kind": "Content",
              "text": ", getSource: "
            },
            {
              "kind": "Content",
              "text": "() => string"
            },
            {
              "kind": "Content",
              "text": ", func: "
            },
            {
              "kind": "Content",
              "text": "(perfEvt?: "
            },
            {
              "kind": "Reference",
              "text": "IPerfEvent",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
            },
            {
              "kind": "Content",
              "text": ") => T"
            },
            {
              "kind": "Content",
              "text": ", details?: "
            },
            {
              "kind": "Content",
              "text": "() => any"
            },
            {
              "kind": "Content",
              "text": ", isAsync?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/PerfManager.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 15,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "mgrSource",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "getSource",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "func",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 10
              },
              "isOptional": false
            },
            {
              "parameterName": "details",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "isOptional": true
            },
            {
              "parameterName": "isAsync",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "doPerf"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!dumpObj:function(1)",
          "docComment": "/**\n * Returns string representation of an object suitable for diagnostics logging.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dumpObj(object: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "object",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "dumpObj"
        },
        {
          "kind": "Enum",
          "canonicalReference": "@microsoft/applicationinsights-core-js!eEventsDiscardedReason:enum",
          "docComment": "/**\n * The eEventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare const enum eEventsDiscardedReason "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/EventsDiscardedReason.d.ts",
          "releaseTag": "Public",
          "name": "eEventsDiscardedReason",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!eEventsDiscardedReason.InvalidEvent:member",
              "docComment": "/**\n * The event is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidEvent = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidEvent"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!eEventsDiscardedReason.KillSwitch:member",
              "docComment": "/**\n * The server is not accepting events from this instrumentation key.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "KillSwitch = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "KillSwitch"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!eEventsDiscardedReason.NonRetryableStatus:member",
              "docComment": "/**\n * Status set to non-retryable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NonRetryableStatus = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NonRetryableStatus"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!eEventsDiscardedReason.QueueFull:member",
              "docComment": "/**\n * The event queue is full.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "QueueFull = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "QueueFull"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!eEventsDiscardedReason.SizeLimitExceeded:member",
              "docComment": "/**\n * The size of the event is too large.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SizeLimitExceeded = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SizeLimitExceeded"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!eEventsDiscardedReason.Unknown:member",
              "docComment": "/**\n * Unknown.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Unknown = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Unknown"
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@microsoft/applicationinsights-core-js!eLoggingSeverity:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare const enum eLoggingSeverity "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/LoggingEnums.d.ts",
          "releaseTag": "Public",
          "name": "eLoggingSeverity",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!eLoggingSeverity.CRITICAL:member",
              "docComment": "/**\n * Error will be sent as internal telemetry\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CRITICAL = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CRITICAL"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!eLoggingSeverity.WARNING:member",
              "docComment": "/**\n * Error will NOT be sent as internal telemetry, and will only be shown in browser console\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "WARNING = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "WARNING"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@microsoft/applicationinsights-core-js!EnumMap:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EnumMap<E = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", I = "
            },
            {
              "kind": "Content",
              "text": "E"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly [key in keyof E extends string ? keyof E : never]: key extends string ? key : keyof E;\n} & I"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/EnumHelperFuncs.d.ts",
          "releaseTag": "Public",
          "name": "EnumMap",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "I",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@microsoft/applicationinsights-core-js!EnumValue:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EnumValue<E = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly [key in keyof E]: E[key];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/EnumHelperFuncs.d.ts",
          "releaseTag": "Public",
          "name": "EnumValue",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!EventHelper:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "EventHelper: "
            },
            {
              "kind": "Reference",
              "text": "IEventHelper",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IEventHelper:interface"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/CoreUtils.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "EventHelper",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!eventOff:function(1)",
          "docComment": "/**\n * Removes an event handler for the specified event\n *\n * @param Object - to remove the event from\n *\n * @param eventName - The name of the event, with optional namespaces or just the namespaces, such as \"click\", \"click.mynamespace\" or \".mynamespace\"\n *\n * @param handlerRef - The callback function that needs to be removed from the given event, when using a namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers otherwise this will only remove events with this specific handler.\n *\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace, if the eventName also includes a namespace the namespace(s) are merged into a single namespace\n *\n * @param useCapture - [Optional] Defaults to false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function eventOff<T>(target: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", eventName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", handlerRef: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", evtNamespace?: "
            },
            {
              "kind": "Content",
              "text": "string | string[] | null"
            },
            {
              "kind": "Content",
              "text": ", useCapture?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EventHelpers.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "eventName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "handlerRef",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "evtNamespace",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            },
            {
              "parameterName": "useCapture",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "eventOff"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!eventOn:function(1)",
          "docComment": "/**\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\n *\n * @param obj - Object to add the event too.\n *\n * @param eventName - String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\n *\n * @param handlerRef - Pointer that specifies the function to call when event fires\n *\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace, if the eventName also includes a namespace the namespace(s) are merged into a single namespace\n *\n * @param useCapture - [Optional] Defaults to false\n *\n * @returns True if the function was bound successfully to the event, otherwise false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function eventOn<T>(target: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", eventName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", handlerRef: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", evtNamespace?: "
            },
            {
              "kind": "Content",
              "text": "string | string[] | null"
            },
            {
              "kind": "Content",
              "text": ", useCapture?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EventHelpers.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "eventName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "handlerRef",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "evtNamespace",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            },
            {
              "parameterName": "useCapture",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "eventOn"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@microsoft/applicationinsights-core-js!EventsDiscardedReason:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type EventsDiscardedReason = "
            },
            {
              "kind": "Content",
              "text": "number | "
            },
            {
              "kind": "Reference",
              "text": "eEventsDiscardedReason",
              "canonicalReference": "@microsoft/applicationinsights-core-js!eEventsDiscardedReason:enum"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/EventsDiscardedReason.d.ts",
          "releaseTag": "Public",
          "name": "EventsDiscardedReason",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!EventsDiscardedReason:var",
          "docComment": "/**\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "EventsDiscardedReason: "
            },
            {
              "kind": "Content",
              "text": "import(\"../JavaScriptSDK.Enums/EnumHelperFuncs\")."
            },
            {
              "kind": "Reference",
              "text": "EnumValue",
              "canonicalReference": "@microsoft/applicationinsights-core-js!EnumValue:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "eEventsDiscardedReason",
              "canonicalReference": "@microsoft/applicationinsights-core-js!eEventsDiscardedReason:enum"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Enums/EventsDiscardedReason.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "EventsDiscardedReason",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!findMetaTag:function(1)",
          "docComment": "/**\n * Helper function to fetch the named meta-tag from the page.\n *\n * @param name - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function findMetaTag(name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "findMetaTag"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!findNamedServerTiming:function(1)",
          "docComment": "/**\n * Helper function to fetch the named server timing value from the page response (first navigation event).\n *\n * @param name - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function findNamedServerTiming(name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "findNamedServerTiming"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!findW3cTraceParent:function(1)",
          "docComment": "/**\n * Helper function to fetch the passed traceparent from the page, looking for it as a meta-tag or a Server-Timing header.\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function findW3cTraceParent(): "
            },
            {
              "kind": "Reference",
              "text": "ITraceParent",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITraceParent:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/W3cTraceParent.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "findW3cTraceParent"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!formatTraceParent:function(1)",
          "docComment": "/**\n * Format the ITraceParent value as a string using the supported and know version formats. So even if the passed traceParent is a later version the string value returned from this function will convert it to only the known version formats. This currently only supports version \"00\" and invalid \"ff\"\n *\n * @param value - The parsed traceParent value\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function formatTraceParent(value: "
            },
            {
              "kind": "Reference",
              "text": "ITraceParent",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITraceParent:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/W3cTraceParent.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "formatTraceParent"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!generateW3CId:function(1)",
          "docComment": "/**\n * generate W3C trace id\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function generateW3CId(): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/CoreUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "generateW3CId"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getConsole:function(1)",
          "docComment": "/**\n * Returns the global console object\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getConsole(): "
            },
            {
              "kind": "Reference",
              "text": "Console",
              "canonicalReference": "!Console:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getConsole"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getCookie:function(1)",
          "docComment": "/**\n * @deprecated\n *\n * - Use the core.getCookieMgr().get() helper method to access userId and sessionId cookie\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getCookie(logger: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": ", name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/CoreUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "getCookie"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getCrypto:function(1)",
          "docComment": "/**\n * Returns the crypto object if it is present otherwise null. This helper is used to access the crypto object from the current global instance which could be window or globalThis for a web worker\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getCrypto(): "
            },
            {
              "kind": "Reference",
              "text": "Crypto",
              "canonicalReference": "!Crypto:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getCrypto"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getDebugExt:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDebugExt(config: "
            },
            {
              "kind": "Reference",
              "text": "IConfiguration",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDbgExtension",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDbgExtension:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/DbgExtensionUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getDebugExt"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getDebugListener:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDebugListener(config: "
            },
            {
              "kind": "Reference",
              "text": "IConfiguration",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "INotificationListener",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/DbgExtensionUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getDebugListener"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getDocument:function(1)",
          "docComment": "/**\n * Returns the global document object if it is present otherwise null. This helper is used to access the document object without causing an exception \"Uncaught ReferenceError: document is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDocument(): "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "!Document:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getDocument"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getExceptionName:function(1)",
          "docComment": "/**\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getExceptionName(object: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/HelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "object",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getExceptionName"
        },
        {
          "kind": "Enum",
          "canonicalReference": "@microsoft/applicationinsights-core-js!GetExtCfgMergeType:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare const enum GetExtCfgMergeType "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Interfaces/IProcessTelemetryContext.d.ts",
          "releaseTag": "Public",
          "name": "GetExtCfgMergeType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!GetExtCfgMergeType.MergeDefaultFromRootOrDefault:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MergeDefaultFromRootOrDefault = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "MergeDefaultFromRootOrDefault"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!GetExtCfgMergeType.MergeDefaultOnly:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MergeDefaultOnly = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "MergeDefaultOnly"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!GetExtCfgMergeType.None:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "None = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "None"
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getGblPerfMgr:function(1)",
          "docComment": "/**\n * Get the current global performance manager that will be used with no performance manager is supplied.\n *\n * @returns - The current default manager\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getGblPerfMgr(): "
            },
            {
              "kind": "Reference",
              "text": "IPerfManager",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/PerfManager.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getGblPerfMgr"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getGlobalInst:function(1)",
          "docComment": "/**\n * Return the named global object if available, will return null if the object is not available.\n *\n * @param name - The globally named object\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getGlobalInst<T>(name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getGlobalInst"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getHistory:function(1)",
          "docComment": "/**\n * Returns the global history object if it is present otherwise null. This helper is used to access the history object without causing an exception \"Uncaught ReferenceError: history is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getHistory(): "
            },
            {
              "kind": "Reference",
              "text": "History",
              "canonicalReference": "!History:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getHistory"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getIEVersion:function(1)",
          "docComment": "/**\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getIEVersion(userAgentStr?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "userAgentStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "getIEVersion"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getJSON:function(1)",
          "docComment": "/**\n * Returns the global JSON object if it is present otherwise null. This helper is used to access the JSON object without causing an exception \"Uncaught ReferenceError: JSON is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getJSON(): "
            },
            {
              "kind": "Reference",
              "text": "JSON",
              "canonicalReference": "!JSON:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getJSON"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getLocation:function(1)",
          "docComment": "/**\n * Returns the global location object if it is present otherwise null. This helper is used to access the location object without causing an exception \"Uncaught ReferenceError: location is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getLocation(checkForMock?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Location",
              "canonicalReference": "!Location:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "checkForMock",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "getLocation"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getMsCrypto:function(1)",
          "docComment": "/**\n * Returns the crypto object if it is present otherwise null. This helper is used to access the crypto object from the current global instance which could be window or globalThis for a web worker\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getMsCrypto(): "
            },
            {
              "kind": "Reference",
              "text": "Crypto",
              "canonicalReference": "!Crypto:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getMsCrypto"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getNavigator:function(1)",
          "docComment": "/**\n * Returns the global navigator object if it is present otherwise null. This helper is used to access the navigator object without causing an exception \"Uncaught ReferenceError: navigator is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNavigator(): "
            },
            {
              "kind": "Reference",
              "text": "Navigator",
              "canonicalReference": "!Navigator:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getNavigator"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getPerformance:function(1)",
          "docComment": "/**\n * Returns the performance object if it is present otherwise null. This helper is used to access the performance object from the current global instance which could be window or globalThis for a web worker\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getPerformance(): "
            },
            {
              "kind": "Reference",
              "text": "Performance",
              "canonicalReference": "!Performance:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getPerformance"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getSetValue:function(1)",
          "docComment": "/**\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\n *\n * @param target - The target object to return or set the default value\n *\n * @param field - The key for the field to set on the target\n *\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getSetValue<T, K extends "
            },
            {
              "kind": "Content",
              "text": "keyof T"
            },
            {
              "kind": "Content",
              "text": ">(target: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", field: "
            },
            {
              "kind": "Content",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": ", defValue?: "
            },
            {
              "kind": "Content",
              "text": "T[K]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[K]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/HelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "field",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "defValue",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getSetValue"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getWindow:function(1)",
          "docComment": "/**\n * Returns the global window object if it is present otherwise null. This helper is used to access the window object without causing an exception \"Uncaught ReferenceError: window is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getWindow(): "
            },
            {
              "kind": "Reference",
              "text": "Window",
              "canonicalReference": "!Window:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getWindow"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasDocument:function(1)",
          "docComment": "/**\n * Checks if document object is available, this is required as we support the API running without a window /document (eg. Node server, electron webworkers) and if we attempt to assign a document object to a local variable or pass as an argument an \"Uncaught ReferenceError: document is not defined\" exception will be thrown. Defined as a function to support lazy / late binding environments.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasDocument(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "hasDocument"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasHistory:function(1)",
          "docComment": "/**\n * Checks if history object is available, this is required as we support the API running without a window /document (eg. Node server, electron webworkers) and if we attempt to assign a history object to a local variable or pass as an argument an \"Uncaught ReferenceError: history is not defined\" exception will be thrown. Defined as a function to support lazy / late binding environments.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasHistory(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "hasHistory"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasJSON:function(1)",
          "docComment": "/**\n * Checks if JSON object is available, this is required as we support the API running without a window /document (eg. Node server, electron webworkers) and if we attempt to assign a history object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\" exception will be thrown. Defined as a function to support lazy / late binding environments.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasJSON(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "hasJSON"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasNavigator:function(1)",
          "docComment": "/**\n * Checks if navigator object is available, this is required as we support the API running without a window /document (eg. Node server, electron webworkers) and if we attempt to assign a navigator object to a local variable or pass as an argument an \"Uncaught ReferenceError: navigator is not defined\" exception will be thrown. Defined as a function to support lazy / late binding environments.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasNavigator(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "hasNavigator"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasOwnProperty:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasOwnProperty(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", prop: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/HelperFuncs.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "prop",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "hasOwnProperty"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasWindow:function(1)",
          "docComment": "/**\n * Checks if window object is available, this is required as we support the API running without a window /document (eg. Node server, electron webworkers) and if we attempt to assign a window object to a local variable or pass as an argument an \"Uncaught ReferenceError: window is not defined\" exception will be thrown. Defined as a function to support lazy / late binding environments.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasWindow(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/EnvUtils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "hasWindow"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IAppInsightsCore extends "
            },
            {
              "kind": "Reference",
              "text": "IPerfManagerProvider",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManagerProvider:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Interfaces/IAppInsightsCore.d.ts",
          "releaseTag": "Public",
          "name": "IAppInsightsCore",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#addNotificationListener:member(1)",
              "docComment": "/**\n * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised. The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be called.\n *\n * @param listener - An INotificationListener object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addNotificationListener?(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "addNotificationListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#addPlugin:member(1)",
              "docComment": "/**\n * Add a new plugin to the installation\n *\n * @param plugin - The new plugin to add\n *\n * @param replaceExisting - should any existing plugin be replaced, default is false\n *\n * @param doAsync - Should the add be performed asynchronously\n *\n * @param addCb - [Optional] callback to call after the plugin has been added\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addPlugin<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(plugin: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", replaceExisting?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", doAsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", addCb?: "
                },
                {
                  "kind": "Content",
                  "text": "(added?: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "plugin",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "replaceExisting",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "doAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "addCb",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": true
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "addPlugin"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#addTelemetryInitializer:member(1)",
              "docComment": "/**\n * Add a telemetry processor to decorate or drop telemetry events.\n *\n * @param telemetryInitializer - The Telemetry Initializer function\n *\n * @returns - A ITelemetryInitializerHandler to enable the initializer to be removed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addTelemetryInitializer(telemetryInitializer: "
                },
                {
                  "kind": "Reference",
                  "text": "TelemetryInitializerFunction",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!TelemetryInitializerFunction:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryInitializerHandler",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryInitializerHandler:interface"
                },
                {
                  "kind": "Content",
                  "text": " | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "telemetryInitializer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "addTelemetryInitializer"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#addUnloadCb:member(1)",
              "docComment": "/**\n * Add a handler that will be called when the SDK is being unloaded\n *\n * @param handler - the handler\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUnloadCb(handler: "
                },
                {
                  "kind": "Reference",
                  "text": "UnloadHandler",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!UnloadHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "addUnloadCb"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#evtNamespace:member(1)",
              "docComment": "/**\n * Returns the unique event namespace that should be used when registering events\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "evtNamespace(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "evtNamespace"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#flush:member(1)",
              "docComment": "/**\n * Flush and send any batched / cached data immediately\n *\n * @param async - send data asynchronously when true (defaults to true)\n *\n * @param callBack - if specified, notify caller when send is complete, the channel should return true to indicate to the caller that it will be called. If the caller doesn't return true the caller should assume that it may never be called.\n *\n * @param sendReason - specify the reason that you are calling \"flush\" defaults to ManualFlush (1) if not specified\n *\n * @param cbTimeout - An optional timeout to wait for any flush operations to complete before proceeding with the unload. Defaults to 5 seconds.\n *\n * @returns - true if the callback will be return after the flush is complete otherwise the caller should assume that any provided callback will never be called\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flush(isAsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", callBack?: "
                },
                {
                  "kind": "Content",
                  "text": "(flushComplete?: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ", sendReason?: "
                },
                {
                  "kind": "Reference",
                  "text": "SendRequestReason",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason:enum"
                },
                {
                  "kind": "Content",
                  "text": ", cbTimeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "callBack",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "sendReason",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "cbTimeout",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "name": "flush"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#getCookieMgr:member(1)",
              "docComment": "/**\n * Get the current cookie manager for this instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCookieMgr(): "
                },
                {
                  "kind": "Reference",
                  "text": "ICookieMgr",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getCookieMgr"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#getNotifyMgr:member(1)",
              "docComment": "/**\n * Get the current notification manager\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNotifyMgr(): "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getNotifyMgr"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#getPlugin:member(1)",
              "docComment": "/**\n * Find and return the (first) plugin with the specified identifier if present\n *\n * @param pluginIdentifier - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPlugin<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(pluginIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ILoadedPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ILoadedPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pluginIdentifier",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getPlugin"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#getProcessTelContext:member(1)",
              "docComment": "/**\n * Return a new instance of the IProcessTelemetryContext for processing events\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getProcessTelContext(): "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getProcessTelContext"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#getTraceCtx:member(1)",
              "docComment": "/**\n * Gets the current distributed trace context for this instance if available\n *\n * @param createNew - Optional flag to create a new instance if one doesn't currently exist, defaults to true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTraceCtx(createNew?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDistributedTraceContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDistributedTraceContext:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "createNew",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "name": "getTraceCtx"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#getTransmissionControls:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTransmissionControls(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelControls",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls:interface"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getTransmissionControls"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize(config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ", extensions: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", logger?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", notificationManager?: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "extensions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "notificationManager",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "name": "initialize"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#isInitialized:member",
              "docComment": "/**\n * Returns a value that indicates whether the instance has already been previously initialized.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInitialized?: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isInitialized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logger: "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#pollInternalLogs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pollInternalLogs?(eventName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "name": "pollInternalLogs"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#removeNotificationListener:member(1)",
              "docComment": "/**\n * Removes all instances of the listener.\n *\n * @param listener - INotificationListener to remove.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeNotificationListener?(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "removeNotificationListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#setCookieMgr:member(1)",
              "docComment": "/**\n * Set the current cookie manager for this instance\n *\n * @param cookieMgr - The manager, if set to null/undefined will cause the default to be created\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCookieMgr(cookieMgr: "
                },
                {
                  "kind": "Reference",
                  "text": "ICookieMgr",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "cookieMgr",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "setCookieMgr"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#setTraceCtx:member(1)",
              "docComment": "/**\n * Sets the current distributed trace context for this instance if available\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTraceCtx(newTraceCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "IDistributedTraceContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDistributedTraceContext:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "newTraceCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "setTraceCtx"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#stopPollingInternalLogs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stopPollingInternalLogs?(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "stopPollingInternalLogs"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#track:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "track(telemetryItem: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "telemetryItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "track"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#unload:member(1)",
              "docComment": "/**\n * Unload and Tear down the SDK and any initialized plugins, after calling this the SDK will be considered to be un-initialized and non-operational, re-initializing the SDK should only be attempted if the previous unload call return `true` stating that all plugins reported that they also unloaded, the recommended approach is to create a new instance and initialize that instance. This is due to possible unexpected side effects caused by plugins not supporting unload / teardown, unable to successfully remove any global references or they may just be completing the unload process asynchronously.\n *\n * @param isAsync - Can the unload be performed asynchronously (default)\n *\n * @param unloadComplete - An optional callback that will be called once the unload has completed\n *\n * @param cbTimeout - An optional timeout to wait for any flush operations to complete before proceeding with the unload. Defaults to 5 seconds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unload(isAsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", unloadComplete?: "
                },
                {
                  "kind": "Content",
                  "text": "(unloadState: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryUnloadState",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryUnloadState:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ", cbTimeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "unloadComplete",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "cbTimeout",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "name": "unload"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IBaseProcessingContext "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Interfaces/IProcessTelemetryContext.d.ts",
          "releaseTag": "Public",
          "name": "IBaseProcessingContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext#core:member",
              "docComment": "/**\n * The current core instance for the request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "core: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "IAppInsightsCore",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "core",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext#createNew:member",
              "docComment": "/**\n * Create a new context using the core and config from the current instance, returns a new instance of the same type\n *\n * @param plugins - The execution order to process the plugins, if null or not supplied then the current execution order will be copied.\n *\n * @param startAt - The plugin to start processing from, if missing from the execution order then the next plugin will be NOT set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createNew: "
                },
                {
                  "kind": "Content",
                  "text": "(plugins?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ", startAt?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "IBaseProcessingContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "createNew",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext#diagLog:member",
              "docComment": "/**\n * THe current diagnostic logger for the request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "diagLog: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "diagLog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext#getCfg:member",
              "docComment": "/**\n * Gets the current core config instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCfg: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getCfg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext#getConfig:member",
              "docComment": "/**\n * Gets the named config from either the named identifier extension or core config if neither exist then the default value is returned\n *\n * @param identifier - The named extension identifier\n *\n * @param field - The config field name\n *\n * @param defaultValue - The default value to return if no defined config exists\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getConfig: "
                },
                {
                  "kind": "Content",
                  "text": "(identifier: string, field: string, defaultValue?: number | string | boolean | string[] | "
                },
                {
                  "kind": "Reference",
                  "text": "RegExp",
                  "canonicalReference": "!RegExp:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => number | string | boolean | string[] | "
                },
                {
                  "kind": "Reference",
                  "text": "RegExp",
                  "canonicalReference": "!RegExp:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext#getExtCfg:member",
              "docComment": "/**\n * Gets the named extension config\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getExtCfg: "
                },
                {
                  "kind": "Content",
                  "text": "<T>(identifier: string, defaultValue?: T | any, mergeDefault?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetExtCfgMergeType",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!GetExtCfgMergeType:enum"
                },
                {
                  "kind": "Content",
                  "text": ") => T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getExtCfg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext#getNext:member",
              "docComment": "/**\n * Returns the next configured plugin proxy\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNext: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext#hasNext:member",
              "docComment": "/**\n * Helper to allow plugins to check and possibly shortcut executing code only required if there is a nextPlugin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasNext: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext#iterate:member",
              "docComment": "/**\n * Synchronously iterate over the context chain running the callback for each plugin, once every plugin has been executed via the callback, any associated onComplete will be called.\n *\n * @param callback - The function call for each plugin in the context chain\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iterate: "
                },
                {
                  "kind": "Content",
                  "text": "<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": ">(callback: (plugin: T) => void) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "iterate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext#onComplete:member",
              "docComment": "/**\n * Set the function to call when the current chain has executed all processNext or unloadNext items.\n *\n * @param onComplete - The onComplete to call\n *\n * @param that - The \"this\" value to use for the onComplete call, if not provided or undefined defaults to the current context\n *\n * @param args - Any additional arguments to pass to the onComplete function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onComplete: "
                },
                {
                  "kind": "Content",
                  "text": "(onComplete: () => void, that?: any, ...args: any[]) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onComplete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IBaseProcessingContext#setNext:member",
              "docComment": "/**\n * Helper to set the next plugin proxy\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setNext: "
                },
                {
                  "kind": "Content",
                  "text": "(nextCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls:interface",
          "docComment": "/**\n * Provides data transmission capabilities\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IChannelControls extends "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryPlugin",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Interfaces/IChannelControls.d.ts",
          "releaseTag": "Public",
          "name": "IChannelControls",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls#flush:member(1)",
              "docComment": "/**\n * Flush to send data immediately; channel should default to sending data asynchronously\n *\n * @param async - send data asynchronously when true\n *\n * @param callBack - if specified, notify caller when send is complete, the channel should return true to indicate to the caller that it will be called. If the caller doesn't return true the caller should assume that it may never be called.\n *\n * @param sendReason - specify the reason that you are calling \"flush\" defaults to ManualFlush (1) if not specified\n *\n * @returns - true if the callback will be return after the flush is complete otherwise the caller should assume that any provided callback will never be called\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flush(async: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", callBack?: "
                },
                {
                  "kind": "Content",
                  "text": "(flushComplete?: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ", sendReason?: "
                },
                {
                  "kind": "Reference",
                  "text": "SendRequestReason",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "async",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callBack",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "sendReason",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "name": "flush"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls#pause:member(1)",
              "docComment": "/**\n * Pause sending data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pause(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "pause"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls#resume:member(1)",
              "docComment": "/**\n * Resume sending data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resume(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "resume"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls#teardown:member",
              "docComment": "/**\n * Tear down the plugin and remove any hooked value, the plugin should be removed so that it is no longer initialized and therefore could be re-initialized after being torn down. The plugin should ensure that once this has been called any further processTelemetry calls are ignored and it just calls the processNext() with the provided context.\n *\n * @param unloadCtx - This is the context that should be used during unloading.\n *\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\n *\n * @returns boolean - true if the plugin has or will call processNext(), this for backward compatibility as previously teardown was synchronous and returned nothing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "teardown: "
                },
                {
                  "kind": "Content",
                  "text": "(unloadCtx?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryUnloadContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryUnloadContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ", unloadState?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryUnloadState",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryUnloadState:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void | boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "teardown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface",
          "docComment": "/**\n * Configuration provided to SDK core\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IConfiguration "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Interfaces/IConfiguration.d.ts",
          "releaseTag": "Public",
          "name": "IConfiguration",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#channels:member",
              "docComment": "/**\n * Channel queues that is setup by caller in desired order. If channels are provided here, core will ignore any channels that are already setup, example if there is a SKU with an initialized channel\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channels?: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelControls",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls:interface"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "channels",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#connectionString:member",
              "docComment": "/**\n * Connection string of resource. Either this or instrumentationKey must be specified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionString?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "connectionString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#cookieCfg:member",
              "docComment": "/**\n * [Optional] A Cookie Manager configuration which includes hooks to allow interception of the get, set and delete cookie operations. If this configuration is specified any specified enabled and domain properties will take precedence over the cookieDomain and disableCookiesUsage values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cookieCfg?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICookieMgrConfig",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cookieCfg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#cookieDomain:member",
              "docComment": "/**\n * @description Custom cookie domain. This is helpful if you want to share Application Insights cookies across subdomains. It can be set here or as part of the cookieCfg.domain, the cookieCfg takes precedence if both are specified.  @type {string}\n *\n * @defaultValue\n *\n * \"\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cookieDomain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cookieDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#cookiePath:member",
              "docComment": "/**\n * @description Custom cookie path. This is helpful if you want to share Application Insights cookies behind an application gateway. It can be set here or as part of the cookieCfg.domain, the cookieCfg takes precedence if both are specified.  @type {string}\n *\n * @defaultValue\n *\n * \"\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cookiePath?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cookiePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#createPerfMgr:member",
              "docComment": "/**\n * [Optional] Callback function that will be called to create a the IPerfManager instance when required and ```enablePerfMgr``` is enabled, this enables you to override the default creation of a PerfManager() without needing to ```setPerfMgr()``` after initialization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createPerfMgr?: "
                },
                {
                  "kind": "Content",
                  "text": "(core: "
                },
                {
                  "kind": "Reference",
                  "text": "IAppInsightsCore",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
                },
                {
                  "kind": "Content",
                  "text": ", notificationManager: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "createPerfMgr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#diagnosticLogInterval:member",
              "docComment": "/**\n * Set the timer interval (in ms) for internal logging queue, this is the amount of time to wait after logger.queue messages are detected to be sent. Note: since 2.8.13 and 3.0.1 the diagnostic logger timer is a normal timeout timer and not an interval timer. So this now represents the timer \"delay\" and not the frequency at which the events are sent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "diagnosticLogInterval?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "diagnosticLogInterval",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#disableCookiesUsage:member",
              "docComment": "/**\n * [Optional] A boolean that indicated whether to disable the use of cookies by the SDK. If true, the SDK will not store or read any data from cookies. Cookie usage can be re-enabled after initialization via the core.getCookieMgr().enable().\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableCookiesUsage?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disableCookiesUsage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#disableDbgExt:member",
              "docComment": "/**\n * [Optional] A flag for performance optimization to disable attempting to use the Chrome Debug Extension, if disabled and the extension is installed this will not send any notifications.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableDbgExt?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disableDbgExt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#disableInstrumentationKeyValidation:member",
              "docComment": "/**\n * @type {boolean} Flag that disables the Instrumentation Key validation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableInstrumentationKeyValidation?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disableInstrumentationKeyValidation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#disablePageShowEvents:member",
              "docComment": "/**\n * [Optional] An array of page show events that you would like to be ignored, special note there must be at lease one valid show event hooked, if you list all or the runtime environment only supports a listed (disabled) event it will STILL be hooked, if required by the SDK. Page Show events include \"pageshow\" and \"visibilitychange\" (with 'visible' state)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disablePageShowEvents?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disablePageShowEvents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#disablePageUnloadEvents:member",
              "docComment": "/**\n * [Optional] An array of the page unload events that you would like to be ignored, special note there must be at least one valid unload event hooked, if you list all or the runtime environment only supports a listed \"disabled\" event it will still be hooked, if required by the SDK. Unload events include \"beforeunload\", \"unload\", \"visibilitychange\" (with 'hidden' state) and \"pagehide\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disablePageUnloadEvents?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disablePageUnloadEvents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#enableDebug:member",
              "docComment": "/**\n * If enabled, uncaught exceptions will be thrown to help with debugging\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableDebug?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enableDebug",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#enableDebugExceptions:member",
              "docComment": "/**\n * If enabled, uncaught exceptions will be thrown to help with debugging\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableDebugExceptions?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enableDebugExceptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#enablePerfMgr:member",
              "docComment": "/**\n * [Optional] When enabled this will create local perfEvents based on sections of the code that have been instrumented to emit perfEvents (via the doPerf()) when this is enabled. This can be used to identify performance issues within the SDK, the way you are using it or optionally your own instrumented code. The provided IPerfManager implementation does NOT send any additional telemetry events to the server it will only fire the new perfEvent() on the INotificationManager which you can listen to. This also does not use the window.performance API, so it will work in environments where this API is not supported.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enablePerfMgr?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enablePerfMgr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#endpointUrl:member",
              "docComment": "/**\n * Endpoint where telemetry data is sent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endpointUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "endpointUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#extensionConfig:member",
              "docComment": "/**\n * Extension configs loaded in SDK\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionConfig?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "extensionConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#extensions:member",
              "docComment": "/**\n * Additional plugins that should be loaded by core at runtime\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensions?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "extensions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#idLength:member",
              "docComment": "/**\n * [Optional] Identifies the default length used to generate random session and user id's if non currently exists for the user / session. Defaults to 22, previous default value was 5, if you need to keep the previous maximum length you should set this value to 5.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idLength?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "idLength",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#instrumentationKey:member",
              "docComment": "/**\n * Instrumentation key of resource. Either this or connectionString must be specified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "instrumentationKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "instrumentationKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#loggingLevelConsole:member",
              "docComment": "/**\n * Console logging level. All logs with a severity level higher than the configured level will be printed to console. Otherwise they are suppressed. ie Level 2 will print both CRITICAL and WARNING logs to console, level 1 prints only CRITICAL.\n *\n * Note: Logs sent as telemetry to instrumentation key will also be logged to console if their severity meets the configured loggingConsoleLevel\n *\n * 0: ALL console logging off 1: logs to console: severity >= CRITICAL 2: logs to console: severity >= WARNING\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loggingLevelConsole?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loggingLevelConsole",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#loggingLevelTelemetry:member",
              "docComment": "/**\n * Telemtry logging level to instrumentation key. All logs with a severity level higher than the configured level will sent as telemetry data to the configured instrumentation key.\n *\n * 0: ALL iKey logging off 1: logs to iKey: severity >= CRITICAL 2: logs to iKey: severity >= WARNING\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loggingLevelTelemetry?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loggingLevelTelemetry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#maxMessageLimit:member",
              "docComment": "/**\n * Maximum number of iKey transmitted logging telemetry per page view\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxMessageLimit?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxMessageLimit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#perfEvtsSendAll:member",
              "docComment": "/**\n * [Optional] Fire every single performance event not just the top level root performance event. Defaults to false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "perfEvtsSendAll?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "perfEvtsSendAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#storagePrefix:member",
              "docComment": "/**\n * Custom optional value that will be added as a prefix for storage name.\n *\n * @defaultValue\n *\n * undefined\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "storagePrefix?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "storagePrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICookieMgr "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Interfaces/ICookieMgr.d.ts",
          "releaseTag": "Public",
          "name": "ICookieMgr",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#del:member(1)",
              "docComment": "/**\n * Delete/Remove the named cookie if cookie support is available and enabled. Note: Not using \"delete\" as the name because it's a reserved word which would cause issues on older browsers\n *\n * @param name - The name of the cookie\n *\n * @param path - [optional] Path to set for the cookie, if not supplied will default to \"/\"\n *\n * @returns - True if the cookie was marked for deletion otherwise false (Because cookie usage is not enabled or available)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "del(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "del"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#get:member(1)",
              "docComment": "/**\n * Get the value of the named cookie\n *\n * @param name - The name of the cookie\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#isEnabled:member(1)",
              "docComment": "/**\n * Can the system use cookies, if this returns false then all cookie setting and access functions will return nothing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isEnabled(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isEnabled"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#purge:member(1)",
              "docComment": "/**\n * Purge the cookie from the system if cookie support is available, this function ignores the enabled setting of the manager so any cookie will be removed. Note: Not using \"delete\" as the name because it's a reserved word which would cause issues on older browsers\n *\n * @param name - The name of the cookie\n *\n * @param path - [optional] Path to set for the cookie, if not supplied will default to \"/\"\n *\n * @returns - True if the cookie was marked for deletion otherwise false (Because cookie usage is not available)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purge(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "purge"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#set:member(1)",
              "docComment": "/**\n * Set the named cookie with the value and optional domain and optional\n *\n * @param name - The name of the cookie\n *\n * @param value - The value of the cookie (Must already be encoded)\n *\n * @param maxAgeSec - [optional] The maximum number of SECONDS that this cookie should survive\n *\n * @param domain - [optional] The domain to set for the cookie\n *\n * @param path - [optional] Path to set for the cookie, if not supplied will default to \"/\"\n *\n * @returns - True if the cookie was set otherwise false (Because cookie usage is not enabled or available)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", maxAgeSec?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", domain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "maxAgeSec",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "domain",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "name": "set"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#setEnabled:member(1)",
              "docComment": "/**\n * Enable or Disable the usage of cookies\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEnabled(value: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "setEnabled"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig:interface",
          "docComment": "/**\n * Configuration definition for instance based cookie management configuration\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICookieMgrConfig "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK.Interfaces/ICookieMgr.d.ts",
          "releaseTag": "Public",
          "name": "ICookieMgrConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#blockedCookies:member",
              "docComment": "/**\n * Specify the cookie name(s) to never be written, this will cause any cookie name to never be created or updated, they will still be read unless also included in the ignoreCookies and may still be explicitly purged or deleted. If not provided defaults to the same list provided in ignoreCookies. (Since v2.8.8)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blockedCookies?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "blockedCookies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#delCookie:member",
              "docComment": "/**\n * Hook function to delete the named cookie with the specified value, separated from setCookie to avoid the need to parse the value to determine whether the cookie is being added or removed.\n *\n * @param name - The name of the cookie\n *\n * @param cookieValue - The value to set to expire the cookie\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delCookie?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string, cookieValue: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "delCookie",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#domain:member",
              "docComment": "/**\n * Custom cookie domain. This is helpful if you want to share Application Insights cookies across subdomains.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "domain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "domain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#enabled:member",
              "docComment": "/**\n * Defaults to true, A boolean that indicates whether the use of cookies by the SDK is enabled by the current instance. If false, the instance of the SDK initialized by this configuration will not store or read any data from cookies\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#getCookie:member",
              "docComment": "/**\n * Hook function to fetch the named cookie value.\n *\n * @param name - The name of the cookie\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCookie?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "getCookie",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#ignoreCookies:member",
              "docComment": "/**\n * Specify the cookie name(s) to be ignored, this will cause any matching cookie name to never be read or written. They may still be explicitly purged or deleted. You do not need to repeat the name in the `blockedCookies` configuration.(Since v2.8.8)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignoreCookies?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ignoreCookies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#path:member",
              "docComment": "/**\n * Specifies the path to use for the cookie, defaults to '/'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#setCookie:member",
              "docComment": "/**\n * Hook function to set the named cookie with the specified value.\n *\n * @param name - The name of the cookie\n *\n * @param value - The value to set for the cookie\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCookie?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string, value: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "setCookie",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils:interface",
          "docComment": "/**\n * Provides a collection of utility functions, included for backward compatibility with previous releases.\n *\n * @deprecated\n *\n * Marking this interface and instance as deprecated in favor of direct usage of the helper functions as direct usage provides better tree-shaking and minification by avoiding the inclusion of the unused items in your resulting code.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICoreUtils "
            }
          ],
          "fileUrlPath": "types/JavaScriptSDK/CoreUtils.d.ts",
          "releaseTag": "Public",
          "name": "ICoreUtils",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#_canUseCookies:member",
              "docComment": "/**\n * Internal - Do not use directly.\n *\n * @deprecated\n *\n * Direct usage of this property is not recommend\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_canUseCookies: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_canUseCookies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#addEventHandler:member",
              "docComment": "/**\n * Trys to add an event handler for the specified event to the window, body and document\n *\n * @param eventName - The name of the event\n *\n * @param callback - The callback function that needs to be executed for the given event  @return {boolean} - true if the handler was successfully added\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addEventHandler: "
                },
                {
                  "kind": "Content",
                  "text": "(eventName: string, callback: any, evtNamespace?: string | string[]) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "addEventHandler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#arrForEach:member",
              "docComment": "/**\n * Performs the specified action for each element in an array. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array. It can return -1 to break out of the loop\n *\n * @param thisArg - [Optional] An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrForEach: "
                },
                {
                  "kind": "Content",
                  "text": "<T>(arr: T[], callbackfn: (value: T, index?: number, array?: T[]) => void | number, thisArg?: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arrForEach",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#arrIndexOf:member",
              "docComment": "/**\n * Returns the index of the first occurrence of a value in an array. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param searchElement - The value to locate in the array.\n *\n * @param fromIndex - The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrIndexOf: "
                },
                {
                  "kind": "Content",
                  "text": "<T>(arr: T[], searchElement: T, fromIndex?: number) => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arrIndexOf",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#arrMap:member",
              "docComment": "/**\n * Calls a defined callback function on each element of an array, and returns an array that contains the results. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n *\n * @param thisArg - An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrMap: "
                },
                {
                  "kind": "Content",
                  "text": "<T, R>(arr: T[], callbackfn: (value: T, index?: number, array?: T[]) => R, thisArg?: any) => R[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arrMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#arrReduce:member",
              "docComment": "/**\n * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n *\n * @param initialValue - If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrReduce: "
                },
                {
                  "kind": "Content",
                  "text": "<T, R>(arr: T[], callbackfn: (previousValue: T | R, currentValue?: T, currentIndex?: number, array?: T[]) => R, initialValue?: R) => R"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arrReduce",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#dateNow:member",
              "docComment": "/**\n * Return the current time via the Date now() function (if available) and falls back to (new Date()).getTime() if now() is unavailable (IE8 or less) https://caniuse.com/#search=Date.now\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dateNow: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dateNow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#disableCookies:member",
              "docComment": "/**\n * @deprecated\n *\n * - Use the core.getCookieMgr().disable() Force the SDK not to store and read any data from cookies.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableCookies: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disableCookies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#generateW3CId:member",
              "docComment": "/**\n * generate W3C trace id\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateW3CId: "
                },
                {
                  "kind": "Content",
                  "text": "() => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "generateW3CId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#hasOwnProperty:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasOwnProperty: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any, prop: string) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasOwnProperty",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isArray:member",
              "docComment": "/**\n * Check if an object is of type Array\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isArray: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isArray",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isBoolean:member",
              "docComment": "/**\n * Checks if the type of value is a boolean.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a boolean, false otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isBoolean: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
                },
                {
                  "kind": "Content",
                  "text": " is boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isBoolean",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isDate:member",
              "docComment": "/**\n * Check if an object is of type Date\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDate: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "obj",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~obj"
                },
                {
                  "kind": "Content",
                  "text": " is "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isError:member",
              "docComment": "/**\n * Check if an object is of type Error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "obj",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~obj"
                },
                {
                  "kind": "Content",
                  "text": " is "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isFunction:member",
              "docComment": "/**\n * Checks if the passed of value is a function.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a boolean, false otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isFunction: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
                },
                {
                  "kind": "Content",
                  "text": " is "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isFunction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isIE:member",
              "docComment": "/**\n * Identifies whether the current environment appears to be IE\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIE: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isIE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isNullOrUndefined:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isNullOrUndefined: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isNullOrUndefined",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isNumber:member",
              "docComment": "/**\n * Checks if the type of value is a number.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a number, false otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isNumber: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
                },
                {
                  "kind": "Content",
                  "text": " is number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isObject:member",
              "docComment": "/**\n * Checks if the passed of value is a function.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a boolean, false otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isObject: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isObject",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isString:member",
              "docComment": "/**\n * Checks if the type of value is a string.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a string, false otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isString: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
                },
                {
                  "kind": "Content",
                  "text": " is string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isTypeof:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isTypeof: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any, theType: string) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isTypeof",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isUndefined:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isUndefined: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isUndefined",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#mwcRandom32:member",
              "docComment": "/**\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry) instead of Math.random() defaults to un-signed. Used as a replacement random generator for IE to avoid issues with older IE instances.\n *\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mwcRandom32: "
                },
                {
                  "kind": "Content",
                  "text": "(signed?: boolean) => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mwcRandom32",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#mwcRandomSeed:member",
              "docComment": "/**\n * Seed the MWC random number generator with the specified seed or a random value\n *\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mwcRandomSeed: "
                },
                {
                  "kind": "Content",
                  "text": "(value?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mwcRandomSeed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#newGuid:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newGuid: "
                },
                {
                  "kind": "Content",
                  "text": "() => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newGuid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#newId:member",
              "docComment": "/**\n * Generate random base64 id string. The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\n *\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newId: "
                },
                {
                  "kind": "Content",
                  "text": "(maxLength?: number) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#objCreate:member",
              "docComment": "/**\n * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param obj - Object to use as a prototype. May be null\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "objCreate: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: object) => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "objCreate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#objDefineAccessors:member",
              "docComment": "/**\n * Try to define get/set object property accessors for the target object/prototype, this will provide compatibility with existing API definition when run within an ES5+ container that supports accessors but still enable the code to be loaded and executed in an ES3 container, providing basic IE8 compatibility.\n *\n * @param target - The object on which to define the property.\n *\n * @param prop - The name of the property to be defined or modified.\n *\n * @param getProp - The getter function to wire against the getter.\n *\n * @param setProp - The setter function to wire against the setter.\n *\n * @returns True if it was able to create the accessors otherwise false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "objDefineAccessors: "
                },
                {
                  "kind": "Content",
                  "text": "<T>(target: any, prop: string, getProp?: () => T, setProp?: (v: T) => void) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "objDefineAccessors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#objKeys:member",
              "docComment": "/**\n * Returns the names of the enumerable string properties and methods of an object. This helper exists to avoid adding a polyfil for older browsers that do not define Object.keys eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Object.keys implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param obj - Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "objKeys: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: {}) => string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "objKeys",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#perfNow:member",
              "docComment": "/**\n * Return the current value of the Performance Api now() function (if available) and fallback to dateNow() if it is unavailable (IE9 or less) https://caniuse.com/#search=performance.now\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "perfNow: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "perfNow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#random32:member",
              "docComment": "/**\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\n *\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "random32: "
                },
                {
                  "kind": "Content",
                  "text": "(signed?: boolean) => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "random32",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#randomValue:member",
              "docComment": "/**\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum. So maxValue(16) will produce a number from 0..16 (range of 17)\n *\n * @param maxValue - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomValue: "
                },
                {
                  "kind": "Content",
                  "text": "(maxValue: number) => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "randomValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#strTrim:member",
              "docComment": "/**\n * helper method to trim strings (IE8 does not implement String.prototype.trim)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "strTrim: "
                },
                {
                  "kind": "Content",
                  "text": "(str: any) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "strTrim",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#toISOString:member",
              "docComment": "/**\n * Convert a date to I.S.O. format in IE8\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toISOString: "
                },
                {
                  "kind": "Content",
 